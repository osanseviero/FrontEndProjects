How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    The diff is a fast way of finding where two files differ. It saves a lot of time compared to doing a manual check.

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    Checking the history of a file is a good way to find bugs, undo changes, and understand what is the purpose of specific parts of the code.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    You need to think carefully when to make the commits. Doing too much commits may not be useful for the project. 

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    Git is really useful for working with complex projects. It works with many projects.

How can you use the commands git log and git diff to view the history of files?

    Git log gives you the history of the commits, while git diff shows the changes.

How might using version control make you more confident to make changes that
could break something?

    If something breaks, there are commits to which we can drawback.

Now that you have your workspace set up, what do you want to try using Git for?

    Something cool :)